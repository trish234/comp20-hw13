Comp20 hw13
Trisha Cox
4/23/20
Assignment does not work but here is the code anyways. I can get the data
into the database successfully but cannot get it out correctly.

INDEX.HTML--------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8"/>
  </head>
  <body>
    <form onsubmit="return false">
      <input type="radio" id="company-name" name="type" value="company"/>
      <label for="company-name">company name</label><br />
      <input type="radio" id="stock-ticker" name="type" value="ticker"/>
      <label for="stock-ticker">stock ticker</label><br />

      <input id="user-input" type="text" />
      <button onClick="search()">Submit </button>
    </form>
    <div id="things-here">
    </div>
    <script>
      function search(){
        const request = new XMLHttpRequest();
        request.open("GET","http://localhost:3000/query", true);
        request.setRequestHeader('Access-Control-Allow-Origin', '*');
        request.onreadystatechange = function() {
          if (request.readyState == 4 && request.status == 200){
            let data = request.response;
            console.log("have response");
            console.log(data);
            document.getElementById("things-here").innerHTML = data;
          } else if (request.readyState == 4 && request.status != 200) {
             console.log("Something went wrong. Load failed.");
          }
        }
        request.send();
      }
    </script>

  </body>
</html>



SERVER.JS------------------------------------------------------------------------------------------
const db = require('./access-data.js');
const q = require('./query-db');

//Server
const http = require('http');
const fs = require ('fs');
const hostname = '127.0.0.1';
const port = 3000;
db.init_data();
const server = http.createServer((req, res) => {
  var url = req.url;
  if (url == '/query'){
    res.writeHead(200);
    const result = q.query();
    console.log(result);
    //res.write(result);
    res.end();
  } else {
    res.writeHead(200, {'Content-Type': 'text/html'});
    fs.readFile('index.html', function(error, data){
      if (error) {
        res.writeHead(404);
        res.write('Error: file not found');
      } else {
        res.write(data);
      }
      res.end();
    });
  }
});

server.listen(port, hostname, () => {
  console.log(`Server running at http://${hostname}:${port}/`);
});



ACCESS-DATA.JS--------------------------------------------------------------------------------
function init_data()
{
  console.log("in main");
  //First read file
  var readline = require('readline');
  var fs = require('fs');

  var myFile = readline.createInterface({
    input: fs.createReadStream('companies.csv')
  });
  var entries = {"data":[]};
  myFile.on('line', function (line) {
    let string = line.split(",");
    let entry = "{'name': '" + string[0] + "'," + " 'ticker':'" + string[1] + "'},";
    entries.data += entry;
    console.log(entries.data);
  });

  // (testing purposes) CPzRnyUfB5hzdiTL cluster0 access pass for trishacox
  const MongoClient = require('mongodb').MongoClient;
  const uri = "mongodb+srv://trishacox:CPzRnyUfB5hzdiTL@cluster0-wuexi.mongodb.net/test?retryWrites=true&w=majority";
  const client = new MongoClient(uri, { useNewUrlParser: true });
  client.connect(err => {
    const collection = client.db("hw13").collection("companies");
    collection.remove({});  //clear the collection
    collection.insertOne(entries, (err,res) => {
      if (err) {console.log("errors are things yeah")}
    });
    console.log("success connecting to database");
    client.close();
  });
  return;
}
module.exports = {init_data}


QUERY-DB.JS------------------------------------------------------------------------------------------
function query() {
  console.log("We're about to search for some data");
  let result = {};
  const MongoClient = require('mongodb').MongoClient;
  const uri = "mongodb+srv://trishacox:CPzRnyUfB5hzdiTL@cluster0-wuexi.mongodb.net/test?retryWrites=true&w=majority";
  const client = new MongoClient(uri, { useNewUrlParser: true });
  client.connect((err) => {
    const collection = client.db("hw13").collection("companies");
    result = collection.findOne().then((result) => {
      client.close();
      console.log(result.data);
      return (result.data);
    })      
  });

}
//console.log(result);
//return the first entry you find
module.exports = {query}
